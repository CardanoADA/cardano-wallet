-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utilities for a building Command-Line Interfaces
--   
--   Utilities for a building Command-Line Interfaces
@package cardano-wallet-cli
@version 2019.7.2


-- | Shared types and helpers for CLI parsing
module Cardano.CLI

-- | Port number with a tag for describing what it is used for
newtype Port (tag :: Symbol)
Port :: Int -> Port
[getPort] :: Port -> Int

-- | Controls how much information to include in log output.
data Verbosity

-- | The default level of verbosity.
Default :: Verbosity

-- | Include less information in the log output.
Quiet :: Verbosity

-- | Include more information in the log output.
Verbose :: Verbosity

-- | Initialize logging at the specified minimum <a>Severity</a> level.
initTracer :: Severity -> Text -> IO (Trace IO Text)

-- | Determine the minimum <a>Severity</a> level from the specified command
--   line arguments.
minSeverityFromArgs :: Arguments -> Severity

-- | Determine the desired <a>Verbosity</a> level from the specified
--   command line arguments.
verbosityFromArgs :: Arguments -> Verbosity

-- | Convert a given <a>Verbosity</a> level into a list of command line
--   arguments that can be passed through to a sub-process.
verbosityToArgs :: Verbosity -> [String]

-- | Override the system output encoding setting. This is needed because
--   the CLI prints UTF-8 characters regardless of the <tt>LANG</tt>
--   environment variable.
setUtf8Encoding :: IO ()

-- | Like <a>hPutErrLn</a> but with provided default <a>Handle</a>
putErrLn :: Text -> IO ()

-- | Print an error message in red
hPutErrLn :: Handle -> Text -> IO ()

-- | A wrapper to avoid orphan instances for types defined externally.
newtype OptionValue a
OptionValue :: a -> OptionValue a
[getOptionValue] :: OptionValue a -> a

-- | Make an existing parser optional. Returns 'Right Nothing' if the input
--   is empty, without running the parser.
optional :: (Monoid m, Eq m) => (m -> Either e a) -> m -> Either e (Maybe a)
parseArgWith :: FromText a => Docopt -> Arguments -> Option -> IO a
parseAllArgsWith :: FromText a => Docopt -> Arguments -> Option -> IO (NonEmpty a)

-- | Like <tt>exitWithUsage</tt>, but with a success exit code
help :: Docopt -> IO ()

-- | Like <a>hGetLine</a> but with default handles
getLine :: Buildable e => Text -> (Text -> Either e a) -> IO (a, Text)

-- | Prompt user and parse the input. Re-prompt on invalid inputs.
hGetLine :: Buildable e => (Handle, Handle) -> Text -> (Text -> Either e a) -> IO (a, Text)

-- | Like <a>hGetSensitiveLine</a> but with default handles
getSensitiveLine :: Buildable e => Text -> (Text -> Either e a) -> IO (a, Text)

-- | Gather user inputs until a newline is met, hiding what's typed with a
--   placeholder character.
hGetSensitiveLine :: Buildable e => (Handle, Handle) -> Text -> (Text -> Either e a) -> IO (a, Text)

-- | Decode API error messages and extract the corresponding message.
decodeError :: ByteString -> Maybe Text

-- | Show a data-type through its <a>ToText</a> instance
showT :: ToText a => a -> String
instance GHC.Show.Show Cardano.CLI.Verbosity
instance GHC.Classes.Eq Cardano.CLI.Verbosity
instance GHC.Show.Show a => GHC.Show.Show (Cardano.CLI.OptionValue a)
instance GHC.Read.Read a => GHC.Read.Read (Cardano.CLI.OptionValue a)
instance GHC.Generics.Generic (Cardano.CLI.OptionValue a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Cardano.CLI.OptionValue a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (Cardano.CLI.OptionValue a)
instance GHC.Enum.Enum a => GHC.Enum.Enum (Cardano.CLI.OptionValue a)
instance GHC.Classes.Ord (Cardano.CLI.Port tag)
instance GHC.Enum.Enum (Cardano.CLI.Port tag)
instance GHC.Generics.Generic (Cardano.CLI.Port tag)
instance GHC.Show.Show (Cardano.CLI.Port tag)
instance GHC.Classes.Eq (Cardano.CLI.Port tag)
instance Data.Text.Class.FromText (Cardano.CLI.OptionValue Cardano.BM.Data.Severity.Severity)
instance Data.Text.Class.ToText (Cardano.CLI.OptionValue Cardano.BM.Data.Severity.Severity)
instance GHC.Enum.Bounded (Cardano.CLI.Port tag)
instance Data.Text.Class.FromText (Cardano.CLI.Port tag)
instance Data.Text.Class.ToText (Cardano.CLI.Port tag)
